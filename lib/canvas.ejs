<!--
    * Author: tiankai
    * Github: https://github.com/tiakia
    * Email: tiankai0426@sina.com
    * Page: canvas 转换
    * Date: 2019/12/6 ������ 16:33:01
  -->

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="apple-mobile-web-app-title" content="" />
    <meta name="author" content="Tiankai" />
    <!--<link rel="shortcut icon" type="image/ico" href="/favicon.ico" />-->
    <title></title>
  </head>
  <body style="margin:0;padding:0">
    <div id="app">
        <canvas id="canvas" ></canvas>
        <!-- <div id="base64">nothing yet</div> -->
        <button id="btn">sendBase64</button>
    </div>
    <script>
     window.onload = function() {
            const oneData = JSON.parse(`<%-  data %>`);
        // 配置canvas
        const canvasConfig = {
            canvasW: 565,
            canvasH: 517,
            typeH: 20,
            textH: 100,
            imgH: 377,
            maxTextW: 420
        };
        const showData = oneData && oneData.length > 0 && oneData[0];
        const img = document.createElement("img");
        const canvas = document.getElementById("canvas");
        canvas.width = canvasConfig.canvasW;
        canvas.height = canvasConfig.canvasH;
        const ctx = canvas.getContext("2d");
        img.src = showData.img;
        img.setAttribute("crossOrigin", "Anonymous");
        img.onload = () => {
            // 图片
            ctx.drawImage(img, 0, 0, canvasConfig.canvasW, canvasConfig.imgH);
            // 类型
            ctx.font = '12px "Microsoft YaHei"';
            ctx.fillStyle = "#333";
            ctx.fillRect(
                0,
                canvasConfig.imgH,
                canvasConfig.canvasW,
                canvasConfig.typeH
            );
            ctx.fillStyle = "#fff";
            const typeW = ctx.measureText(showData.type).width;
            ctx.fillText(
                showData.type,
                canvasConfig.canvasW / 2 - typeW / 2,
                canvasConfig.imgH + 14
            );
            // 文字
            ctx.fillStyle = "#d6d6d6";
            ctx.fillRect(0, canvasConfig.imgH + 20, canvasConfig.canvasW, 100);
            ctx.font = '14px "Comic Sans"';
            ctx.fillStyle = "#000";
          const textW = ctx.measureText(showData.text).width;
            // 判断是否可以一行绘制完成
            if (textW <= canvasConfig.maxTextW) {
                ctx.fillText(
                    showData.text,
                    20,
                    canvasConfig.imgH + canvasConfig.typeH + 40
                );
            } else {
                let content = showData.text;
                let drawText = "";
                let drawIdx = 0;
                let line = 1;
                let lineNum = 3;
                for (let i = 0, len = content.length; i < len; i++) {
                    drawText += content[i];
                    // 判断是否字符够一行了 最多三行
                  if (ctx.measureText(drawText).width >= canvasConfig.maxTextW && line < lineNum) {
                      if(line === 1) {
                        ctx.fillText(
                          drawText,
                            25,
                          canvasConfig.imgH + canvasConfig.typeH + 35 + 20 * (line - 1)
                        );

                      } else {
                        ctx.fillText(
                          drawText,
                            15,
                          canvasConfig.imgH + canvasConfig.typeH + 35 + 20 * (line - 1)
                        );

                      }
                      drawText = '';
                      drawIdx = i;
                      line++;
                   } else if(line <= lineNum){
                     // 三行的时候查看剩余的字符一行能否画完
                      if(ctx.measureText(content.slice(drawIdx+1)).width >= canvasConfig.maxTextW){
                        // 不能画完,判断是否够一行，够了加省略号
                        if(ctx.measureText(drawText).width >= canvasConfig.maxTextW && line <= lineNum){
                          ctx.fillText(
                             drawText + '...',
                              15,
                            canvasConfig.imgH + canvasConfig.typeH + 35 + 20 * (line - 1)
                          );
                          line++;
                        }
                      } else {
                        // 一行可以画完，直接画。
                           ctx.fillText(
                             content.slice(drawIdx+1),
                               15,
                             canvasConfig.imgH + canvasConfig.typeH + 35 + 20 * (line - 1)
                           );
                         break;
                       }
                    }
                }
            }
            // 日历
            ctx.fillStyle = "#f2f2f2";
            ctx.fillRect(
                canvasConfig.canvasW - canvasConfig.textH,
                canvasConfig.canvasH - canvasConfig.textH - canvasConfig.typeH,
                canvasConfig.textH,
                canvasConfig.textH
            );
            // day
            ctx.fillStyle = "#333";
            ctx.font = '56px "Microsoft YaHei"';
            const dayW = ctx.measureText(showData.date.split("-")[1]).width;
            ctx.fillText(
                showData.date.split("-")[1],
                canvasConfig.canvasW - canvasConfig.textH / 2 - dayW / 2,
                canvasConfig.imgH + canvasConfig.typeH + 60
            );
            // 月份
            ctx.font = '12px "Microsoft YaHei"';
            ctx.fillText(
                showData.date.split("-")[0],
                canvasConfig.canvasW - 60,
                canvasConfig.imgH + canvasConfig.typeH + 90
            );
            // 底部type栏
            ctx.font = '12px "Microsoft YaHei"';
            ctx.fillStyle = "#333";
            ctx.fillRect(
                0,
                canvasConfig.canvasH - canvasConfig.typeH,
                canvasConfig.canvasW,
                canvasConfig.typeH
            );
            ctx.fillStyle = "#fff";
            ctx.textBaseline = "middle";
            const footText = "tiankai0426@sina.com";
            const footTW = ctx.measureText(footText).width;
            ctx.fillText(
                footText,
                canvasConfig.canvasW - footTW,
                canvasConfig.canvasH - 10
            );

           let btn = document.getElementById('btn');
           btn.addEventListener('click', function() {
             const xhr = new XMLHttpRequest();
             xhr.open("post", "sendBase64");
             xhr.setRequestHeader("Content-Type", "application/json");
             xhr.send(`${canvas.toDataURL()}`);
             xhr.onreadystatechange = () => {
               if (xhr.readyState === 4 && xhr.status === 200) {
                 console.log(xhr);
               }
             }

           });
           // let base64 = document.getElementById('base64');
           // base64.innerHTML = canvas.toDataURL();
           // console.log(canvas.toDataURL());
        };
     }
   </script>
  </body>
</html>
